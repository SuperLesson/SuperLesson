[tool.poetry]
name = "SuperLesson"
version = "0.3.1"
description = "CLI to transcribe lectures"
authors = [
    "Isabella Basso",
    "Felipe Kaneshiro",
    "Isaque Alves",
    "Ricardo Saraiva",
]
readme = "README.md"
license = "MIT"
repository = "https://github.com/SuperLesson/SuperLesson"

[tool.poetry.scripts]
sl = "superlesson.__main__:main"

[tool.poetry.dependencies]
python = "^3.10"
click = "^8.1.7"
boto3 = "^1.28"
replicate = "^0.22.0"
python-dotenv = "^1.0"
openai = "^1.5"
tiktoken = "^0.5.1"
pypdf = { extras = ["crypto"], version = "^3.17" }
typst = "^0.10.0"

[tool.poetry.group.dev.dependencies]
pytest = "*"
hypothesis = "*"
ruff = "^0.1.7"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 119

[tool.ruff]
target-version = "py310"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint]
select = [
    "F", # pyflakes
    # pycodestyle
    "E", # errors
    "W", # warnings

    "B", # bugbear
    "C", # mccabe
    "S", # flake8-bandit

    "C4", # flake8-comprehensions
    # TODO: #63 enable once we have docstrings
    # "D",   # pydocstyle
    "EM",  # flake8-errmsg
    "I",   # isort
    "PT",  # pytest
    "Q",   # flake8-quotes
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "UP",  # pyupgrade

    "ASYNC",
    "DTZ",
]
ignore = [
    "D105", # missing docstring in magic method
    "E501", # line too long
    "S101", # use of assert detected

    # see https://github.com/astral-sh/ruff/issues/4045
    "S602",
    "S603",
]

[tool.ruff.per-file-ignores]
"tests/**/*.py" = [
    "D", # missing docstring in public module
]

[tool.ruff.mccabe]
max-complexity = 9

[tool.mypy]
python_version = "3.10"
strict = false # TODO change to true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

[[tool.mypy.overrides]]
module = 'ml_metadata.*'
ignore_missing_imports = true